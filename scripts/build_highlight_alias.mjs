import hljs from 'highlight.js';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const languages = hljs.listLanguages();
const result = {
  languages: languages,
  aliases: {}
};

languages.forEach(lang => {
  result.aliases[lang] = lang;

  const aliases = hljs.getLanguage(lang).aliases;

  if (aliases) {
    aliases.forEach(alias => {
      result.aliases[alias] = lang;
    });
  }
});

const outputPaths = [
  path.join(__dirname, '../highlight_alias.json'),
  path.join(__dirname, '../dist/highlight_alias.json')
];

outputPaths.forEach(outputPath => {
  fs.mkdirSync(path.dirname(outputPath), { recursive: true });
  fs.writeFileSync(outputPath, JSON.stringify(result));
});

// Build the TypeScript file for import
const tsOutputPath = path.join(__dirname, '../lib/highlight_alias.ts');
const tsContent = `// This file is auto-generated by scripts/build_highlight_alias.mjs\nexport default ${JSON.stringify(result, null, 2)} as const;\n`;
fs.mkdirSync(path.dirname(tsOutputPath), { recursive: true });
fs.writeFileSync(tsOutputPath, tsContent);

// Build the CommonJS file for import
const cjsOutputPath = path.join(__dirname, '../dist/cjs/highlight_alias.js');
const cjsContent = `// This file is auto-generated by scripts/build_highlight_alias.mjs\nmodule.exports = ${JSON.stringify(result, null, 2)};\n`;
fs.mkdirSync(path.dirname(cjsOutputPath), { recursive: true });
fs.writeFileSync(cjsOutputPath, cjsContent);

// Build the ESM file for import
const esmOutputPath = path.join(__dirname, '../dist/esm/highlight_alias.js');
const esmContent = `// This file is auto-generated by scripts/build_highlight_alias.mjs\nexport default ${JSON.stringify(result, null, 2)};\n`;
fs.mkdirSync(path.dirname(esmOutputPath), { recursive: true });
fs.writeFileSync(esmOutputPath, esmContent);

// Fix the ESM import for compiled lib/highlight.ts
const srcJs = path.join(__dirname, '../dist/esm/highlight_esm.js');
const destJs = path.join(__dirname, '../dist/esm/highlight.js');
if (fs.existsSync(srcJs)) {
  fs.renameSync(srcJs, destJs);
}

const srcDts = path.join(__dirname, '../dist/esm/highlight_esm.d.ts');
const destDts = path.join(__dirname, '../dist/esm/highlight.d.ts');
if (fs.existsSync(srcDts)) {
  fs.renameSync(srcDts, destDts);
}
